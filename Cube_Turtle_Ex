import turtle
import colorsys

# Set up the screen
screen = turtle.Screen()
screen.title("RGB to HSV Cube")
screen.bgcolor("black")

# Set up the turtle
pointer = turtle.Turtle() # Create an instance of the turtle class 
pointer.speed(0.0045)  # Fastest drawing speed
pointer.pensize(2) # Size of the turtle pointer

# Function to draw a line with color
def draw_line(start, end, color):
    pointer.penup()
    pointer.goto(start)
    pointer.pendown()
    pointer.pencolor(color)
    pointer.goto(end)

# Define cube coordinates (front and back faces)
cube_front = [(-50, -50), (50, -50), (50, 50), (-50, 50)]
cube_back = [(-30, -30), (70, -30), (70, 70), (-30, 70)]

# Draw the edges of the cube
for i in range(4):
    # Calculate hue (0 to 1), cycling through colors
    hue = i / 4.0  # 0.0, 0.25, 0.5, 0.75
    # Use full saturation and value for vivid colors
    rgb = colorsys.hsv_to_rgb(hue, 1.0, 1.0)
    
    # Draw front face edge
    draw_line(cube_front[i], cube_front[(i+1)%4], rgb)
    # Draw back face edge
    draw_line(cube_back[i], cube_back[(i+1)%4], rgb)
    # Connect front and back faces
    draw_line(cube_front[i], cube_back[i], rgb)

    

# Hide the pointer and keep the window open
pointer.hideturtle()
screen.mainloop()
